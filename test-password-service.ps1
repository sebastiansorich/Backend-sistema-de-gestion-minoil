# Script de prueba para el servicio de cambio de contrase√±as
# Ejecutar desde tu m√°quina local

param(
    [string]$ServerUrl = "http://SRVDC.main.minoil.com.bo:8080/api/change-password",
    [string]$Username = "ssorich",
    [string]$CurrentPassword = "Clave123",
    [string]$NewPassword = "Minoil123"
)

Write-Host "üß™ Probando servicio de cambio de contrase√±as..." -ForegroundColor Cyan
Write-Host "URL: $ServerUrl" -ForegroundColor Yellow
Write-Host "Usuario: $Username" -ForegroundColor Yellow

# Preparar datos
$body = @{
    username = $Username
    currentPassword = $CurrentPassword
    newPassword = $NewPassword
    domain = "main.minoil.com.bo"
} | ConvertTo-Json

Write-Host "üì§ Enviando petici√≥n..." -ForegroundColor Green

try {
    # Enviar petici√≥n
    $response = Invoke-RestMethod -Uri $ServerUrl -Method POST -Body $body -ContentType "application/json" -TimeoutSec 30
    
    Write-Host "‚úÖ Respuesta del servidor:" -ForegroundColor Green
    $response | ConvertTo-Json -Depth 3
    
    if ($response.success) {
        Write-Host "üéâ ¬°Cambio de contrase√±a exitoso!" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Error en el cambio de contrase√±a" -ForegroundColor Red
    }
}
catch {
    Write-Host "‚ùå Error en la petici√≥n:" -ForegroundColor Red
    Write-Host $_.Exception.Message -ForegroundColor Red
    
    if ($_.Exception.Response) {
        $statusCode = $_.Exception.Response.StatusCode
        Write-Host "C√≥digo de estado: $statusCode" -ForegroundColor Red
    }
}

Write-Host "`nüîç Para probar manualmente con curl:" -ForegroundColor Cyan
Write-Host "curl -X POST '$ServerUrl' -H 'Content-Type: application/json' -d '$body'" -ForegroundColor Gray
