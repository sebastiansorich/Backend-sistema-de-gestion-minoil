generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Sede {
  id        Int       @id @default(autoincrement())
  nombre    String    @unique
  direccion String?
  telefono  String?
  email     String?
  activo    Boolean   @default(true)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  nombreSap String?
  sedeSapId String?   @unique
  areas     Area[]
  usuarios  Usuario[]

  @@map("sedes")
}

model Area {
  id          Int       @id @default(autoincrement())
  nombre      String
  descripcion String?
  activo      Boolean   @default(true)
  sedeId      Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  areaSapId   Int?      @unique
  nombreSap   String?
  sede        Sede      @relation(fields: [sedeId], references: [id])
  cargos      Cargo[]
  usuarios    Usuario[]

  @@unique([nombre, sedeId])
  @@index([sedeId], map: "areas_sedeId_fkey")
  @@map("areas")
}

model Cargo {
  id                 Int       @id @default(autoincrement())
  nombre             String
  descripcion        String?
  nivel              Int       @default(1)
  activo             Boolean   @default(true)
  areaId             Int
  cargoSuperiorId    Int?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  rolId              Int
  cargoSap           String?
  sincronizadoSap    Boolean   @default(false)
  area               Area      @relation(fields: [areaId], references: [id])
  cargoSuperior      Cargo?    @relation("CargoHierarchy", fields: [cargoSuperiorId], references: [id])
  cargosSubordinados Cargo[]   @relation("CargoHierarchy")
  rol                Rol       @relation(fields: [rolId], references: [id])
  usuarios           Usuario[]

  @@unique([nombre, areaId])
  @@unique([cargoSap, areaId])
  @@index([areaId], map: "cargos_areaId_fkey")
  @@index([cargoSuperiorId], map: "cargos_cargoSuperiorId_fkey")
  @@index([rolId], map: "cargos_rolId_fkey")
  @@map("cargos")
}

model Rol {
  id          Int       @id @default(autoincrement())
  nombre      String    @unique
  descripcion String?
  activo      Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  cargos      Cargo[]
  permisos    Permiso[]

  @@map("roles")
}

model Usuario {
  id                   Int                    @id @default(autoincrement())
  username             String                 @unique
  email                String                 @unique
  nombre               String
  apellido             String
  password             String?
  activo               Boolean                @default(true)
  ultimoAcceso         DateTime?
  sedeId               Int
  areaId               Int
  cargoId              Int
  createdAt            DateTime               @default(now())
  updatedAt            DateTime               @updatedAt
  autenticacion        String                 @default("local")
  empleadoSapId        Int?                   @unique
  jefeDirectoSapId     Int?
  nombreCompletoSap    String?
  ultimaSincronizacion DateTime?
  mantenimientos       MantenimientoChopera[]
  area                 Area                   @relation(fields: [areaId], references: [id])
  cargo                Cargo                  @relation(fields: [cargoId], references: [id])
  sede                 Sede                   @relation(fields: [sedeId], references: [id])

  @@index([areaId], map: "usuarios_areaId_fkey")
  @@index([cargoId], map: "usuarios_cargoId_fkey")
  @@index([sedeId], map: "usuarios_sedeId_fkey")
  @@map("usuarios")
}

model Modulo {
  id          Int       @id @default(autoincrement())
  nombre      String    @unique
  descripcion String?
  ruta        String    @unique
  activo      Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  esMenu      Boolean   @default(true)
  icono       String?
  nivel       Int       @default(1)
  orden       Int       @default(0)
  padreId     Int?
  padre       Modulo?   @relation("ModuloHierarchy", fields: [padreId], references: [id])
  submodulos  Modulo[]  @relation("ModuloHierarchy")
  permisos    Permiso[]

  @@index([padreId])
  @@index([nivel])
  @@index([orden])
  @@map("modulos")
}

model Permiso {
  id         Int      @id @default(autoincrement())
  rolId      Int
  moduloId   Int
  crear      Boolean  @default(false)
  leer       Boolean  @default(false)
  actualizar Boolean  @default(false)
  eliminar   Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  modulo     Modulo   @relation(fields: [moduloId], references: [id])
  rol        Rol      @relation(fields: [rolId], references: [id])

  @@unique([rolId, moduloId])
  @@index([moduloId], map: "permisos_moduloId_fkey")
  @@map("permisos")
}

model TipoMantenimiento {
  id             Int                    @id @default(autoincrement())
  nombre         String                 @unique
  descripcion    String?
  activo         Boolean                @default(true)
  createdAt      DateTime               @default(now())
  updatedAt      DateTime               @updatedAt
  mantenimientos MantenimientoChopera[]

  @@map("tipos_mantenimiento")
}

model CategoriaChecklist {
  id        Int             @id @default(autoincrement())
  nombre    String
  orden     Int
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
  items     ItemChecklist[]

  @@map("categorias_checklist")
}

model ItemChecklist {
  id            Int                  @id @default(autoincrement())
  categoriaId   Int
  nombre        String
  tipoRespuesta String               @default("boolean")
  opciones      Json?
  orden         Int
  createdAt     DateTime             @default(now())
  updatedAt     DateTime             @updatedAt
  categoria     CategoriaChecklist   @relation(fields: [categoriaId], references: [id])
  respuestas    RespuestaChecklist[]

  @@index([categoriaId], map: "items_checklist_categoriaId_fkey")
  @@map("items_checklist")
}

model MantenimientoChopera {
  id                       Int                  @id @default(autoincrement())
  usuarioId                Int
  clienteCodigo            String
  choperaId                Int
  fechaVisita              DateTime
  tipoMantenimientoId      Int
  estadoGeneral            String?              @db.Text
  comentarioEstado         String?              @db.Text
  comentarioCalidadCerveza String?              @db.Text
  createdAt                DateTime             @default(now())
  updatedAt                DateTime             @updatedAt
  tipoMantenimiento        TipoMantenimiento    @relation(fields: [tipoMantenimientoId], references: [id])
  usuario                  Usuario              @relation(fields: [usuarioId], references: [id])
  respuestasChecklist      RespuestaChecklist[]
  respuestasSensorial      RespuestaSensorial[]

  @@index([fechaVisita])
  @@index([clienteCodigo])
  @@index([choperaId])
  @@index([tipoMantenimientoId], map: "mantenimientos_choperas_tipoMantenimientoId_fkey")
  @@index([usuarioId], map: "mantenimientos_choperas_usuarioId_fkey")
  @@map("mantenimientos_choperas")
}

model RespuestaChecklist {
  id              Int                  @id @default(autoincrement())
  mantenimientoId Int
  itemId          Int
  valor           String               @db.Text
  createdAt       DateTime             @default(now())
  updatedAt       DateTime             @updatedAt
  item            ItemChecklist        @relation(fields: [itemId], references: [id])
  mantenimiento   MantenimientoChopera @relation(fields: [mantenimientoId], references: [id])

  @@index([itemId], map: "respuestas_checklist_itemId_fkey")
  @@index([mantenimientoId], map: "respuestas_checklist_mantenimientoId_fkey")
  @@map("respuestas_checklist")
}

model RespuestaSensorial {
  id              Int                  @id @default(autoincrement())
  mantenimientoId Int
  grifo           Int
  cerveza         String
  criterio        String
  valor           String               @default("Cumple")
  createdAt       DateTime             @default(now())
  updatedAt       DateTime             @updatedAt
  mantenimiento   MantenimientoChopera @relation(fields: [mantenimientoId], references: [id])

  @@index([mantenimientoId], map: "respuestas_sensorial_mantenimientoId_fkey")
  @@map("respuestas_sensorial")
}
