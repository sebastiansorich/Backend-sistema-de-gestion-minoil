generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model Usuario {
  id                    Int       @id @default(autoincrement())
  username              String    @unique
  email                 String    @unique
  nombre                String
  apellido              String
  password              String?
  activo                Boolean   @default(true)
  ultimoAcceso          DateTime?
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt
  autenticacion         String?
  empID                 Int?
  jefeDirectoSapId      Int?
  nombreCompletoSap     String?
  rolId                 Int
  ultimaSincronizacion  DateTime?
  rol                   Rol       @relation(fields: [rolId], references: [id])

  @@map("users")
}

model Rol {
  id          Int        @id @default(autoincrement())
  nombre      String     @unique
  descripcion String?
  activo      Boolean    @default(true)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  usuarios    Usuario[]
  permisos    Permiso[]

  @@map("roles")
}

model Modulo {
  id          Int        @id @default(autoincrement())
  nombre      String     @unique
  descripcion String?
  ruta        String     @unique
  activo      Boolean    @default(true)
  esMenu      Boolean    @default(true)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  icono       String?
  nivel       Int?
  orden       Int?
  padreId     Int?
  padre       Modulo?    @relation("ModuloPadre", fields: [padreId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  submodulos  Modulo[]   @relation("ModuloPadre")
  permisos    Permiso[]

  @@map("modulos")
}

model Permiso {
  id         Int      @id @default(autoincrement())
  rolId      Int
  moduloId   Int
  crear      Boolean  @default(false)
  leer       Boolean  @default(false)
  actualizar Boolean  @default(false)
  eliminar   Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  rol        Rol      @relation(fields: [rolId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  modulo     Modulo   @relation(fields: [moduloId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@unique([rolId, moduloId])
  @@map("permisos")
}
